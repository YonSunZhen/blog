<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel='stylesheet' href='/stylesheets/public.css' />
  <link rel='stylesheet' href='/stylesheets/admin.css' />
  <link rel='stylesheet' href='/stylesheets/article.css' />
  <link rel="stylesheet" href="/javascripts/layui/css/layui.css">
  <title>文章管理</title>
</head>
<body>
  <table id="article" lay-filter="article"></table>
  <script src="/javascripts/layui/layui.js"></script>
  <script src="/javascripts/wangEditor.js"></script>
  <!-- 右边操作 -->
  <script type="text/html" id="bar">
    <a class="layui-btn layui-btn-xs layui-btn-normal" lay-event="detail">详情</a>
    <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
  </script>
  <!-- 头部操作 -->
  <!-- <script type="text/html" id="toolbar">
    <div class="layui-btn-container">
      <button class="layui-btn layui-btn-sm" lay-event="addUser">添加用户</button>
    </div>
  </script> -->
  <script>
    layui.config({
      base : '../javascripts/'
    }).extend({
      selectM: './layui_extends/selectM'
    }).use(['table','jquery','layer','selectM','form'], function(){
      var form = layui.form;
      var table = layui.table;
      var $ = layui.jquery;
      var layer = layui.layer;
      var selectM = layui.selectM;
      //第一个实例
      var table1 = table.render({
        elem: '#article',
        width:1150,
        height: 540,
        url: '/index/getArticlesAllData' ,//数据接口
        page: true ,//开启分页
        //toolbar:'#toolbar',//开启头部工具栏
        cols: [[ //表头
          {type:'checkbox',fixed:'left'},
          {field:'',title:'序号',type:'numbers',width:80},
          {field: 'articleName', title: '文章名', width:100},
          {field: 'typeName', title: '所属类型', width:110},
          {field: 'state', title: '状态', width:80,templet:function(d){
            if(d.state === 1){
              return '通过';
            }else{
              return '未通过';
            }
          }},
          {field: 'createPeople', title: '创建人', width:110} ,
          {field: 'createDate', title: '创建时间', width: 110,templet:function(d){
            let old = d.createDate;
            return new Date(old).toLocaleDateString()+" "+new Date(old).toLocaleTimeString();
          }},
          {field: 'updateDate', title: '更新时间', width: 170, sort: true,templet:function(d){
            if(d.updateDate){
              let old = d.updateDate;
              return new Date(old).toLocaleDateString()+" "+new Date(old).toLocaleTimeString();
            }else{
              return '';
            }    
          }},
          {field: 'updatePeople', title: '更新人', width:90} ,
          {field: 'readCount', title: '阅读量', width: 80},
          {field: 'right', title: '操作',align:'center', width: 180, toolbar:'#bar'}
        ]]
      });
      //监听行工具栏事件
      table.on('tool(article)',function(obj){
        let data = obj.data;//获取当前行所有数据
        let id = data.id;//获取选中行的id
        let layEvent = obj.event;//获取点击的是哪个操作按钮
        let tr = obj.tr;//获取当前行tr的DOM对象
        if(layEvent === 'del'){
          //console.log("666");
          //console.log(obj);
          layer.open({
            content:'确认删除吗?',
            btn:['删除','取消'],
            yes:function(index,layero){
              $.ajax({
                type:'POST',
                url:'/index/delArticlesOneData',
                data:{'id':id},
                success:function(data){
                  if(data === "success"){
                    layer.close(index);
                    obj.del();//删除对应行（tr）的DOM结构，并更新缓存
                    // layer.confirm('已成功删除！',function(index){
                    //   obj.del();//删除对应行（tr）的DOM结构，并更新缓存
                    //   layer.close(index);//关闭对话框
                    // })
                  }else{
                    alert("删除失败");
                  }
                }
              })
            },
            btn2:function(index,layero){
              layer.close(index);
            }
          })
        }else if(layEvent === 'edit'){

          var index1 = layer.open({
            type:1,
            area: ['1000px', '560px'],
            title:'编辑文章',
            // btn:['提交文章','取消'],
            // //按钮的回调操作
            // btn1:function(index, layero){
            //   let typeName = $("#typeName").val();
            //   let updatePeople = $("#updatePeople").val();
            //   let state = $("#state").val();
            //   let remark = $("#remark").val();
            //   $.ajax({
            //     type:"POST",
            //     url:"/index/updateType",
            //     data:{'id':id,'typeName':typeName,'updatePeople':updatePeople,'state':state,'remark':remark},
            //     success:function(result){
            //       if(result === "success"){
            //         layer.confirm('更新成功！',function(index){
            //           table1.reload();//重载表格
            //           layer.close(index);//关闭对话框
            //         })
            //       }else{
            //         layer.confirm('更新失败！',function(index){
            //           layer.close(index);//关闭对话框
            //         })
            //       }
            //     }
            //   })
            // },
            // btn2:function(index, layero){
            //   // console.log("999");
            // },
            content:'<div style="margin-top:20px;width:900px;" class="layui-form">\
                    <div class="layui-form-item">\
                      <label class="layui-form-label">输入类型</label>\
                      <div class="layui-input-block">\
                        <select name="type" id="type" lay-filter="">\
                          <option value="">请选择</option>\
                          <%for(var i = 0;i < data.length - 1;i++){%>\
                            <option value="<%=data[i].tid%>"><%=data[i].typeName%></option>\
                          <%}%>\
                        </select>\
                      </div>\
                    </div>\
                    <div class="layui-form-item">\
                      <label class="layui-form-label">输入标题</label>\
                      <div class="layui-input-block">\
                        <input type="text" name="title" id="name" required  lay-verify="required" placeholder="请输入标题" autocomplete="off" class="layui-input">\
                      </div>\
                    </div>\
                    <div class="layui-form-item">\
                      <label class="layui-form-label">输入状态</label>\
                      <div class="layui-input-block">\
                        <select name="state" id="state" lay-filter="" <%if(data[data.length-1] !== "superAdmin"){%>disabled="disabled"<%}%>>\
                          <option value="">请选择</option>\
                          <option value="0">未通过</option>\
                          <option value="1">通过</option>\
                        </select>\
                      </div>\
                    </div>\
                    <div class="layui-form-item">\
                      <div id="editor" style="margin-left:38px;"></div>\
                    </div>\
                    <div class="layui-form-item">\
                      <div style="margin-left:38px;text-align: right;">\
                        <button class="layui-btn" id="addArticle">提交文章</button>\
                        <button class="layui-btn  layui-btn-normal" id="refresh">取消更改</button>\
                      </div>\
                    </div>\
                    </div>',
            success: function(layero,index){
              //console.log(layero, index);
              form.render();//layui动态生成的select必须使用form.render()重新渲染
              //初始化富文本编辑器
              var E = window.wangEditor;
              var editor = new E("#editor");
              editor.customConfig.debug = true;
              editor.customConfig.zIndex = 1;
              //editor.customConfig.uploadImgShowBase64 = true   // 使用 base64 保存图片
              editor.customConfig.uploadFileName = 'photo';
              editor.customConfig.uploadImgServer = '/index/uploadPic';
              //监听函数在上传图片的不同阶段做相应的处理(插入一张图片就自动上传了)
              editor.customConfig.uploadImgHooks = {
                before: function (xhr, editor, files) {
                  // 图片上传之前触发
                  // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，files 是选择的图片文件    
                  // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传
                  // return {
                  //     prevent: true,
                  //     msg: '放弃上传'
                  // }
                },
                success: function (xhr, editor, result) {
                  console.log(result);
                  console.log('图片插入成功！');
                  // 图片上传并返回结果，图片插入成功之后触发
                  // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果
                },
                fail: function (xhr, editor, result) {
                  console.log(result);
                  console.log('图片上传并返回结果，但图片插入错误')
                  // 图片上传并返回结果，但图片插入错误时触发
                  // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果
                },
                error: function (xhr, editor) {
                  // 图片上传出错时触发
                  // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象
                },
                timeout: function (xhr, editor) {
                  // 图片上传超时时触发
                  // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象
                }
              }
              editor.create();

              //将原来的数据填充到文本框
              $.ajax({
                type:'POST',
                url:'/index/getArticleOneData',
                data:{'id':id},
                success:function(data){
                  $("#name").val(data[0].articleName);
                  $("#type").val(data[0].tid);
                  $("#state").val(data[0].state);
                  editor.txt.html(decodeURIComponent(data[0].content));
                  form.render('select');//必须重新渲染
                  //console.log(data);
                }
              })

              //点击提交按钮事件
              $("#addArticle").click(function(){
                let articleName = $("#name").val();
                let tid = $("#type").val();
                let content = encodeURIComponent(editor.txt.html());//将html代码编码后再存进数据库
                let state = $("#state").val();
                let text = editor.txt.text();
                let data = {
                  'id':id,
                  'articleName':articleName,
                  'tid':tid,
                  'content':content,
                  'state':state
                }
                //console.log(typeName);
                if(text === ""){
                  layer.confirm('您还未输入文章!',function(index){
                    layer.close(index);//关闭对话框
                  })
                }else{
                  $.ajax({
                    type:'POST',
                    url:'/index/updateArticleOneData',
                    data:data,
                    success:function(result){
                      if(result === "success"){
                        layer.confirm('更新成功!',function(index){
                          layer.close(index);//关闭对话框
                          table1.reload();
                        })
                      }else{
                        layer.confirm('更新失败!',function(index){
                          layer.close(index);//关闭对话框
                        })
                      }
                    }
                  })
                }
                console.log(editor.txt.html());
                console.log(editor.txt.text());
              })

              //点击刷新按钮事件
              $("#refresh").click(function(){
                $.ajax({
                  type:'POST',
                  url:'/index/getArticleOneData',
                  data:{'id':id},
                  success:function(data){
                    $("#name").val(data[0].articleName);
                    $("#type").val(data[0].tid);
                    $("#state").val(data[0].state);
                    editor.txt.html(decodeURIComponent(data[0].content));
                    form.render('select');//必须重新渲染
                    console.log(data);
                  }
                })
              })

            }

          });


          // $.ajax({
          //   type:"POST",
          //   url:"/index/getTypesOneData",
          //   sync:true,
          //   data:{"id":id},
          //   success:function(data){
          //     $("#typeName").val(data[0].typeName);
          //     $("#updatePeople").val(data[0].updatePeople);
          //     $("#state").val(data[0].state);
          //     $("#remark").val(data[0].remark);
          //     //console.log(data);
          //   }
          // })
        }
      })
      
    })
  </script>
</body>
</html>